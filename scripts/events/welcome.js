const { getTime, drive } = global.utils;

if (!global.temp.welcomeEvent)
	global.temp.welcomeEvent = {};

module.exports = {
	config: {
		name: "welcome",
		version: "2.0",
		author: "Mehedi Hassan",
		category: "events"
	},

	langs: {
		bn: {
			session1: "‡¶∏‡¶ï‡¶æ‡¶≤",
			session2: "‡¶¶‡ßÅ‡¶™‡ßÅ‡¶∞",
			session3: "‡¶¨‡¶ø‡¶ï‡ßá‡¶≤",
			session4: "‡¶∞‡¶æ‡¶§",

			// ‡¶Ø‡¶ñ‡¶® ‡¶¨‡¶ü ‡¶®‡¶ø‡¶ú‡ßá ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶° ‡¶π‡ßü
			welcomeMessage: `
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
ü§ñ ‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶ ‡¶Ü‡¶Æ‡¶æ‡¶ï‡ßá ‡¶è‡¶á ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™‡ßá ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶° ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø üíñ

‚öôÔ∏è Bot Prefix :  %1
üìú ‡¶∏‡¶¨ ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶¶‡ßá‡¶ñ‡¶§‡ßá ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶® :  %1help

‡¶ö‡¶≤‡ßÅ‡¶® ‡¶è‡¶ï‡¶∏‡¶æ‡¶•‡ßá ‡¶è‡¶á ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™‡¶ü‡¶æ ‡¶Ü‡¶∞‡¶ì ‡¶Æ‡¶ú‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶§‡ßÅ‡¶≤‡¶ø! üòÑ

üëë Bot Owner : Mohammad Akash
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
			`,

			// ‡¶Ø‡¶ñ‡¶® ‡¶®‡¶§‡ßÅ‡¶® ‡¶Æ‡ßá‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞ ‡¶Ø‡ßã‡¶ó ‡¶π‡ßü
			defaultWelcomeMessage: `
__‡¶Ü‡¶∏‡¶∏‡¶æ‡¶≤‡¶æ‡¶Æ‡ßÅ ‡¶Ü‡¶≤‡¶æ‡¶á‡¶ï‡ßÅ‡¶Æ__
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
__Welcome ‚û§ {userName}__

_‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ {boxName}_
_‡¶è‡¶∞ ‡¶™‡¶ï‡ßç‡¶∑ ‡¶•‡ßá‡¶ï‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶ï‡ßá_
       __!! ‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ !!__
__‡¶Ü‡¶™‡¶®‡¶ø ‡¶è‡¶á__
        __‡¶ó‡ßç‡¶∞‡ßÅ‡¶™‡ßá‡¶∞ {memberCount} ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞ ‡¶Æ‡ßá‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞__!!

___Added By : {inviterName}___

Bot Owner : Mohammad Akash
			`
		}
	},

	onStart: async ({ threadsData, message, event, api, getLang }) => {
		if (event.logMessageType == "log:subscribe")
			return async function () {
				const hours = getTime("HH");
				const { threadID } = event;
				const prefix = global.utils.getPrefix(threadID);
				const { nickNameBot } = global.GoatBot.config;
				const dataAddedParticipants = event.logMessageData.addedParticipants;

				// üü¢ ‡¶Ø‡¶¶‡¶ø ‡¶¨‡¶ü ‡¶®‡¶ø‡¶ú‡ßá ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶° ‡¶π‡ßü
				if (dataAddedParticipants.some((i) => i.userFbId == api.getCurrentUserID())) {
					if (nickNameBot)
						api.changeNickname(nickNameBot, threadID, api.getCurrentUserID());
					return message.send(getLang("welcomeMessage", prefix));
				}

				// üü¢ ‡¶®‡¶§‡ßÅ‡¶® ‡¶Æ‡ßá‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞‡¶¶‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø
				if (!global.temp.welcomeEvent[threadID])
					global.temp.welcomeEvent[threadID] = {
						joinTimeout: null,
						dataAddedParticipants: []
					};

				global.temp.welcomeEvent[threadID].dataAddedParticipants.push(...dataAddedParticipants);
				clearTimeout(global.temp.welcomeEvent[threadID].joinTimeout);

				global.temp.welcomeEvent[threadID].joinTimeout = setTimeout(async function () {
					const threadData = await threadsData.get(threadID);
					if (threadData.settings.sendWelcomeMessage == false)
						return;

					const dataAddedParticipants = global.temp.welcomeEvent[threadID].dataAddedParticipants;
					const threadName = threadData.threadName || "‡¶è‡¶á ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™‡ßá";
					const userName = [],
						mentions = [];

					for (const user of dataAddedParticipants) {
						userName.push(user.fullName);
						mentions.push({ tag: user.fullName, id: user.userFbId });
					}

					if (userName.length == 0) return;

					let { welcomeMessage = getLang("defaultWelcomeMessage") } = threadData.data;

					// üßÆ ‡¶Æ‡ßá‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶æ
					const threadInfo = await api.getThreadInfo(threadID);
					const memberCount = threadInfo.participantIDs.length;

					// üßç‚Äç‚ôÇÔ∏è ‡¶Ø‡¶ø‡¶®‡¶ø ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶° ‡¶ï‡¶∞‡ßá‡¶õ‡ßá‡¶®
					const inviterID = event.author;
					let inviterName = "Unknown";
					try {
						const info = await api.getUserInfo(inviterID);
						inviterName = info[inviterID]?.name || "Unknown";
					} catch { }

					let session;
					if (hours <= 10) session = getLang("session1");
					else if (hours <= 12) session = getLang("session2");
					else if (hours <= 18) session = getLang("session3");
					else session = getLang("session4");

					welcomeMessage = welcomeMessage
						.replace(/\{userName\}/g, userName.join(", "))
						.replace(/\{boxName\}/g, threadName)
						.replace(/\{memberCount\}/g, memberCount)
						.replace(/\{inviterName\}/g, inviterName)
						.replace(/\{session\}/g, session);

					message.send({ body: welcomeMessage, mentions });
					delete global.temp.welcomeEvent[threadID];
				}, 1500);
			};
	}
};
